name: CI/CD with MongoDB and Python

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:5.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Connect to MongoDB and Initialize Collections
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
      run: |
        python - <<EOF
        from pymongo import MongoClient

        # Connect to MongoDB
        client = MongoClient("${{ secrets.MONGO_URI }}")
        db = client['sampleupload']

        # Initialize collections
        if "testCollection" not in db.list_collection_names():
            db.create_collection("testCollection")
            print("Collection 'testCollection' created")
        else:
            print("Collection 'testCollection' already exists")

        client.close()
        EOF

    - name: Run Tests
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
      run: |
        pytest --html=report.html --self-contained-html > pytest_test_results.log || exit 0
        cat pytest_test_results.log

    - name: Check if Tests Passed or Failed
      id: test-status
      run: |
        if grep -q "FAILED" pytest_test_results.log; then
          echo "Tests failed"
          echo "TESTS_PASSED=false" >> $GITHUB_ENV
          exit 1
        else
          echo "Tests passed"
          echo "TESTS_PASSED=true" >> $GITHUB_ENV
        fi

    - name: Archive Test Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: pytest-test-report
        path: report.html
